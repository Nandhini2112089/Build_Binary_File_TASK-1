pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
    }

    stages {
        stage('Setup') {
            steps {
                sh '''
                    python -m venv $VENV_DIR
                    . $VENV_DIR/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Build') {
            steps {
                sh '''
                    . $VENV_DIR/bin/activate
                    python -m py_compile lib/*.py lib/src/*.py
                    stash name: 'compiled', includes: 'lib/**/*.py*'
                '''
            }
        }

        stage('Test') {
            steps {
                sh '''
                    . $VENV_DIR/bin/activate
                    pytest --junit-xml=test-reports/results.xml tests/
                '''
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }

        stage('Package') {
            steps {
                sh '''
                    . $VENV_DIR/bin/activate
                    pyinstaller --onefile lib/src/main.py --name password_checker
                '''
            }
        }

        stage('Deliver') {
            steps {
                archiveArtifacts artifacts: 'dist/password_checker', fingerprint: true
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
